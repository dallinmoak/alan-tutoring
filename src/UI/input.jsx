"use client";

import { useEffect, useState } from "react";

export default function FormInput(props) {
  const { label, name, changeAction, type, value, required, error } =
    props.info;

  const [show, setShow] = useState(false);
  const [currentType, setCurrentType] = useState(type);
  const [localVal, setLocalVal] = useState(value);

  const viewIconFalsePaths = [
    "M478.9 164.1c-168.5 9.6-324.1 98.1-421.1 239.4-18.3 26.7-40 66.4-52.6 96.5l-5.3 12.4L5.6 526c7.1 16.6 23.7 49.6 32.9 65 87.2 146.4 234.2 243.8 401.2 265.9 25.9 3.4 42 4.4 72.3 4.4 30.3 0 46.4-1 72.3-4.4 167-22.1 314-119.5 401.2-265.9 9.2-15.4 25.8-48.4 32.9-65l5.7-13.6-5.3-12.4c-33.4-79.6-88-153.3-155-209.2-107.5-89.9-244-134.8-384.9-126.7zm72.6 94c83.1 6.8 164.7 37.6 232 87.4 56 41.4 104.6 98.8 135 159.5l3.7 7.4-3.2 6.6c-9.8 19.9-28.3 49.3-44.1 70.1-68.1 89.4-168.1 151.2-277.5 171.4-32.6 6-43.9 6.9-85.4 6.9-41.5 0-52.8-.9-85.4-6.9-109.4-20.2-209.4-82-277.5-171.4-15.8-20.8-34.3-50.2-44.1-70.1l-3.2-6.6 3.7-7.4c30.4-60.7 78.9-118 135-159.5 64.6-47.8 140.9-77.6 222-86.5 26.1-2.9 60.5-3.3 89-.9z",
    "M488 304.1c-87.3 10.1-159.5 74.6-180 161-5.1 21.5-6.6 54-3.5 75.7 8.6 60.3 41.5 112.5 92.5 146.7 18.4 12.3 47.7 24.7 70 29.6 36.5 8 74.6 6 110.5-5.7 13.6-4.4 38.1-16.3 49.5-23.9 45.1-30.3 76.8-75.7 88.9-127.2 6.9-29.6 6.9-66.2.1-95.2-9.7-40.8-29.8-75.7-60.1-104.6-33.4-31.7-75.5-51.4-121.4-56.5-10.6-1.2-35.8-1.1-46.5.1zm41.3 93.4c30.8 4.6 60.2 22.8 77.7 48 7.1 10.4 14.6 26.5 17.6 38.2 3.4 13.1 4.4 34.6 2.1 47.8-6.5 37.2-30.5 69.1-64.2 85.5-17.2 8.3-30.5 11.3-50.5 11.3s-33.3-3-50.5-11.3c-28.2-13.7-49.9-38.5-59.9-68.5-4.5-13.4-5.9-24.1-5.3-40.5.6-17.8 3.4-29.5 10.6-44.6 6.5-13.6 13.4-23.4 23.5-33.5 25.9-25.9 62.6-37.9 98.9-32.4z",
  ];

  const viewIconTruePaths = [
    "M79.6 100.2 47 133.5l62.2 62.3 62.3 62.2-3.5 2.8c-17.8 13.8-50.3 44.9-68 64.7-39.1 44-70.8 94.1-94 148.4l-6.1 14.4 5.7 13.6C26.3 550.7 55.1 597.7 91 641c13.2 16 51.9 54.7 67.7 67.8 90 74.4 191.5 116.4 306.5 126.8 20.8 1.9 68.2 2.1 88.3.5 46.5-3.9 88.7-12.4 131-26.6 12.1-4.1 23.5-8 25.3-8.7l3.2-1.3 79.5 79.5 79.5 79.5 32.7-32.7 32.8-32.8-39.5-39.7C854.8 809.8 112.6 67 112.3 67c-.1 0-14.8 15-32.7 33.2zm234.9 318.4c-8.3 24.2-11.5 43.5-11.5 69.9 0 10.5.7 22.3 1.5 28.3 13.8 97 91.1 170.8 188.8 180.3 29.8 2.9 67.5-2.4 94-13.1l7.2-3 22.5 22.5c12.3 12.3 22.1 22.7 21.8 23-1.9 1.9-39 9.8-60.8 12.9-25.2 3.6-40 4.6-66.9 4.6-73.2 0-140.2-15.9-205.6-48.9-43.3-21.8-77.2-46.1-111.8-80.1-25.8-25.2-41.7-44.3-60.8-72.9-10.5-15.7-22.6-36.3-28.4-48.2l-2.7-5.5 4.6-9.2c26.3-52.5 68.7-104 120.1-146l11-9 40.7 40.6 40.7 40.7-4.4 13.1zm199.9 185.8c-3.4 1.1-20.7-.8-30.7-3.4-19.2-4.9-36-14.1-50.5-27.5-23.3-21.7-37.2-52.4-37.2-82.4v-8.6l60.5 60.5c57.7 57.7 60.4 60.5 57.9 61.4zM479 140c-40.3 2.6-80.9 9.6-117.9 20.2-9.7 2.7-17.8 5.2-18.1 5.4-.2.3 16.8 17.7 37.8 38.7l38.3 38.3 12.2-2.3c46.9-8.6 93.1-10.1 138.2-4.3 119.4 15.4 224.5 74.3 299.2 167.7 17.9 22.3 36.1 50.4 48 73.9l5.7 11.1-6.7 12.5c-25 47.5-58.7 90.5-99.9 127.4l-5.6 5.1 32.8 32.8 32.9 32.8 6.8-6c10.8-9.6 36.8-36.6 48.4-50.3 36.2-42.7 66-90.8 87.4-141.4l5.6-13.2-5.3-12.4c-33.7-80.1-87.8-153.1-155-209.2-85.4-71.5-189.1-114.6-300.8-125.3-19.8-1.9-65.3-2.7-84-1.5zM478.9 164.1c-168.5 9.6-324.1 98.1-421.1 239.4-18.3 26.7-40 66.4-52.6 96.5l-5.3 12.4L5.6 526c7.1 16.6 23.7 49.6 32.9 65 87.2 146.4 234.2 243.8 401.2 265.9 25.9 3.4 42 4.4 72.3 4.4 30.3 0 46.4-1 72.3-4.4 167-22.1 314-119.5 401.2-265.9 9.2-15.4 25.8-48.4 32.9-65l5.7-13.6-5.3-12.4c-33.4-79.6-88-153.3-155-209.2-107.5-89.9-244-134.8-384.9-126.7zm72.6 94c83.1 6.8 164.7 37.6 232 87.4 56 41.4 104.6 98.8 135 159.5l3.7 7.4-3.2 6.6c-9.8 19.9-28.3 49.3-44.1 70.1-68.1 89.4-168.1 151.2-277.5 171.4-32.6 6-43.9 6.9-85.4 6.9-41.5 0-52.8-.9-85.4-6.9-109.4-20.2-209.4-82-277.5-171.4-15.8-20.8-34.3-50.2-44.1-70.1l-3.2-6.6 3.7-7.4c30.4-60.7 78.9-118 135-159.5 64.6-47.8 140.9-77.6 222-86.5 26.1-2.9 60.5-3.3 89-.9z",
    "M487 280.5c-11.1 1.6-22.8 4-23.8 4.9-.3.4 20.7 22.1 46.8 48.2 44.5 44.5 48 47.8 55.5 51.7 21 11 39.2 29.5 50.3 51.2 2.6 5 10.9 13.9 50.6 53.5 26.1 26.1 47.7 47.2 48 46.9.8-.8 4.5-21.1 5.6-30.4 5.8-52-12.1-110.3-46.5-151.4-35.6-42.5-84.8-69.1-138.7-75-12.9-1.4-36-1.2-47.8.4z",
  ];

  const handleInputChange = (e) => {
    // console.log('event', e.target.value);
    const myValue = e.target.value;
    setLocalVal(myValue);
    changeAction(myValue);
  };

  useEffect(() => {
    setLocalVal(value);
  }, [value]);

  const requiredContent = <div className="text-danger-">*&nbsp;</div>;

  const passwordContent = () => {
    if (type == "password") {
      return (
        <div className="[&>svg]:h-5 [&>svg]:pe-1 col-start-2 row-start-1 flex justify-end items-center text-dark-shades- dark:text-light-shades- fill-current">
          <svg
            xmlns="http://www.w3.org/2000/svg"
            version="1.0"
            viewBox="0 0 1024 1024"
            onClick={() => {
              setCurrentType((prev) => (prev == "text" ? "password" : "text"));
              setShow((prev) => (prev == false ? true : false));
            }}
          >
            {show
              ? viewIconTruePaths.map((path, index) => {
                  return <path key={index} d={path} />;
                })
              : viewIconFalsePaths.map((path, index) => {
                  return <path key={index} d={path} />;
                })}
          </svg>
        </div>
      );
    }
  };

  const inputOuter = () => {
    const inputInner = (
      <div className="[&>input]:bg-light-shades- [&>input]:dark:bg-dark-shades- focus-visible:[&>input]:bg-light-shades-darker focus-visible:[&>input]:dark:bg-dark-shades-lighter border-b border-b-dark-shades- dark:border-b-light-shades- grid grid-cols-[11fr_1fr] grid-rows-1">
        <input
          className="focus-visible:outline-none p-1 w-full col-start-1 col-span-2 row-start-1 dark:[color-scheme:dark]"
          name={name}
          type={currentType}
          value={localVal ? localVal : ""}
          onChange={handleInputChange}
        />
        {passwordContent()}
      </div>
    );
    if (error?.state) {
      return (
        <>
          <div className="text-danger- text-sm">{error?.msg}</div>
          <div className="bg-danger- [&>*]:opacity-70">{inputInner}</div>
        </>
      );
    } else {
      return inputInner;
    }
  };

  return (
    <div className="flex flex-col">
      <label className="flex" htmlFor={name}>
        {required ? requiredContent : null}
        {label}
      </label>
      <div>{inputOuter()}</div>
    </div>
  );
}
